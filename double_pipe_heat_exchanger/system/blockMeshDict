/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters       0.001;

r1 4.75;
nr1 -4.75;
r2  6.35;
nr2 -6.35;
r3 14;
nr3 -14;

sqrt2 1.41421356237;
a 3.35875721064;      // r1/sqrt(2)
b -3.35875721064;     // -r1/sqrt(2)
c 4.49012806054;      // r2/sqrt(2)
d -4.49012806054;     // -r2/sqrt(2)
e 9.89949493663;      // r3/sqrt(2)
f -9.89949493663;     // -r3/sqrt(2)
length 500;           // length of the cylinder

vertices
(
  // innerfluid
  // bottom circle
  ($a  $a  0)
  ($b  $a  0)
  ($b  $b  0)
  ($a  $b  0)

  // top circle
  ($a  $a  $length)
  ($b  $a  $length)
  ($b  $b  $length)
  ($a  $b  $length)

  // pipe 
  // bottom circle
  ($c  $c  0)
  ($d  $c  0)
  ($d  $d  0)
  ($c  $d  0)

  // top circle
  ($c  $c  $length)
  ($d  $c  $length)
  ($d  $d  $length)
  ($c  $d  $length)

  // outerfluid 
  // bottom circle
  ($e  $e  0)
  ($f  $e  0)
  ($f  $f  0)
  ($e  $f  0)

  // top circle
  ($e  $e  $length)
  ($f  $e  $length)
  ($f  $f  $length)
  ($e  $f  $length)

  name c0 (0   0         0)         // first center of cylinder
  name c1 (0   0   $length)         // second center of cylinder
);


blocks
(
  // innerfluid
  hex (0 1 c0 c0 4 5 c1 c1) (12 10 50) simpleGrading (1 2 1)
  hex (1 2 c0 c0 5 6 c1 c1) (12 10 50) simpleGrading (1 2 1)
  hex (2 3 c0 c0 6 7 c1 c1) (12 10 50) simpleGrading (1 2 1)
  hex (3 0 c0 c0 7 4 c1 c1) (12 10 50) simpleGrading (1 2 1)

  // pipe
  hex (8   9  1  0  12  13  5  4) (12 5 50) simpleGrading (1 1 1)
  hex (9  10  2  1  13  14  6  5) (12 5 50) simpleGrading (1 1 1)
  hex (10 11  3  2  14  15  7  6) (12 5 50) simpleGrading (1 1 1)
  hex (11  8  0  3  15  12  4  7) (12 5 50) simpleGrading (1 1 1)

  // outerfluid
  hex (16 17  9  8 20 21 13 12) (12 15 50) simpleGrading (1 1 1)
  hex (17 18 10  9 21 22 14 13) (12 15 50) simpleGrading (1 1 1)
  hex (18 19 11 10 22 23 15 14) (12 15 50) simpleGrading (1 1 1)
  hex (19 16  8 11 23 20 12 15) (12 15 50) simpleGrading (1 1 1)
);

edges
(
  // innerfluid 
  arc 0 1 (0    $r1  0)
  arc 1 2 ($nr1 0    0)
  arc 2 3 (0    $nr1 0)
  arc 3 0 ($r1  0    0)

  arc 4 5 (0    $r1  $length)
  arc 5 6 ($nr1 0    $length)
  arc 6 7 (0    $nr1 $length)
  arc 7 4 ($r1  0    $length)

  // pipe 
  arc 8   9 (0    $r2  0)
  arc 9  10 ($nr2 0    0)
  arc 10 11 (0    $nr2 0)
  arc 11  8 ($r2  0    0)

  arc 12 13 (0    $r2  $length)
  arc 13 14 ($nr2 0    $length)
  arc 14 15 (0    $nr2 $length)
  arc 15 12 ($r2  0    $length)

  // outerfluid 
  arc 16 17 (0    $r3  0)
  arc 17 18 ($nr3 0    0)
  arc 18 19 (0    $nr3 0)
  arc 19 16 ($r3  0    0)

  arc 20 21 (0    $r3  $length)
  arc 21 22 ($nr3 0    $length)
  arc 22 23 (0    $nr3 $length)
  arc 23 20 ($r3  0    $length)
);

boundary
(

  innerFluidInlet              // patch name
  {
      type patch;
      faces
      (
          (0 c0 c0 1)  
          (1 c0 c0 2)
          (2 c0 c0 3)
          (3 c0 c0 0)
      );
  }         

  innerFluidOutlet             // patch name
  {
      type patch;
      faces
      (
          (4 c1 c1 5)  
          (5 c1 c1 6)
          (6 c1 c1 7)
          (7 c1 c1 4)
      );
  }                  

  // inner_fluid_pipe_interface             // patch name
  // {
  //     type patch;
  //     faces
  //     (
  //         (0 1 5 4)  
  //         (1 2 6 5)
  //         (2 3 7 6)
  //         (3 0 4 7)
  //     );
  // } 

  pipeFront             // patch name
  {
      type patch;
      faces
      (
          (8 0 1 9)
          (9 1 2 10)
          (10 2 3 11)
          (11 3 0 8)
      );
  }

  pipeBack             // patch name
  {
      type wall;
      faces
      (
          (12 4 5 13)
          (13 5 6 14)
          (14 6 7 15)
          (15 7 4 12)
      );
  }

  // outer_fluid_pipe_interface             // patch name
  // {
  //     type patch;
  //     faces
  //     (
  //         (8 9 13 12)  
  //         (9 10 14 13)
  //         (10 11 15 14)
  //         (11 8 12 15)
  //     );
  // } 

  outerFluidInlet             // patch name
  {
      type wall;
      faces
      (
          (16 8 9 17)
          (17 9 10 18)
          (18 10 11 19)
          (19 11 8 16)
      );
  }

  outerFluidOutlet             // patch name
  {
      type wall;
      faces
      (
          (20 12 13 21)
          (21 13 14 22)
          (22 14 15 23)
          (23 15 12 20)
      );
  }

  outerFluidLateral
  {
      type patch;
      faces
      (
          (16 17 21 20)  
          (17 18 22 21)
          (18 19 23 22)
          (19 16 20 23)
      );
  }
)

mergePatchPairs
(
);

// *************************************************** //