/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters       0.001;

// radius of cylinder
// r 3;
// nr #calc "-1.0*$r";
// r_byroot2 2.12132034356;
// nr_byroot2 #calc "-1.0*$r_byroot2";
// // height of cylinder
// h 10;
// // cube side
// x 15;
// a #calc "2.0*$x";
// nx -15;
// // cylinder bottom plane
// z1 #calc "($a-$h)/2.0";
// // cylinder top plane
// z2 #calc "($a+$h)/2.0";

// sqrt2 1.41421356237;


vertices
(
  // upper cuboid
  // ($x  $nx  $z2)
  // ($x  $x  $z2)
  // ($nx  $x  $z2)
  // ($nx  $nx  $z2)

  // ($x  $nx  $a)
  // ($x  $x  $a)
  // ($nx  $x  $a)
  // ($nx  $nx  $a)

  // // lower cuboid
  // ($x  $nx  0)
  // ($x  $x  0)
  // ($nx  $x  0)
  // ($nx  $nx  0)

  // ($x  $nx  $z1)
  // ($x  $x  $z1)
  // ($nx  $x  $z1)
  // ($nx  $nx  $z1)

  // // mid-section (j)
  // ($r_byroot2  $r_byroot2  $z1)
  // ($x  $x  $z1)
  // ($nx  $x  $z1)
  // ($nr_byroot2  $r_byroot2  $z1)

  // ($r_byroot2  $r_byroot2  $z2)
  // ($x  $x  $z2)
  // ($nx  $x  $z2)
  // ($nr_byroot2  $r_byroot2  $z2)

  // // mid-section (-j)
  // ($x  $nx  $z1)
  // ($r_byroot2  $nr_byroot2  $z1)
  // ($nr_byroot2  $nr_byroot2  $z1)
  // ($nx  $nx  $z1)

  // ($x  $nx  $z2)
  // ($r_byroot2  $nr_byroot2  $z2)
  // ($nr_byroot2  $nr_byroot2  $z2)
  // ($nx  $nx  $z2)


  // // mid-section (i)
  // ($r_byroot2  $nr_byroot2  $z1)
  // ($x  $nx  $z1)
  // ($x  $x  $z1)
  // ($r_byroot2  $r_byroot2  $z1)

  // ($r_byroot2  $nr_byroot2  $z2)
  // ($x  $nx  $z2)
  // ($x  $x  $z2)
  // ($r_byroot2  $r_byroot2  $z2)

  // // mid-section (-i)
  // ($nx  $nx  $z1)
  // ($nr_byroot2  $nr_byroot2  $z1)
  // ($nr_byroot2  $r_byroot2  $z1)
  // ($nx  $x  $z1)

  // ($nx  $nx  $z2)
  // ($nr_byroot2  $nr_byroot2  $z2)
  // ($nr_byroot2  $r_byroot2  $z2)
  // ($nx  $x  $z2)

    (20  -20  -5)
    (20  20  -5)
    (-20 20  -5)
    (-20  -20  -5)

    (20  -20  30)
    (20  20  30)
    (-20 20  30)
    (-20  -20  30)
);


blocks
(
  // top cuboid
  hex (0 1 2 3 4 5 6 7) (25 25 10) simpleGrading (1 1 1)

  // bottom cuboid
  // hex (8 9 10 11 12 13 14 15) (25 25 10) simpleGrading (1 1 1)

  // // mid-section
  // hex (16 17 18 19 20 21 22 23) (25 12 10) simpleGrading (1 1 1)
  // hex (24 25 26 27 28 29 30 31) (25 12 10) simpleGrading (1 1 1)
  // hex (32 33 34 35 36 37 38 39) (25 12 50) simpleGrading (1 1 1)
  // hex (40 41 42 43 44 45 46 47) (25 12 50) simpleGrading (1 1 1)

  // hex (0 1 2 3 4 5 6 7) (30 30 30) simpleGrading (1 1 1)

  // hex (8 9 10 11 12 13 14 15) (2 10 10) simpleGrading (1 1 1)
);

edges
(
  // mid-section (j) 
  // arc 16 19 (0 $r $z1)
  // arc 20 23 (0 $r $z2)

  // // mid-section (-j) 
  // arc 25 26 (0 $nr $z1)
  // arc 29 30 (0 $nr $z2)

  // // mid-section (i) 
  // arc 32 35 ($r 0 $z1)
  // arc 36 39 ($r 0 $z2)

  // // mid-section (-i) 
  // arc 41 42 ($nr 0 $z1)
  // arc 45 46 ($nr 0 $z2)

  
);

boundary
(

  // cylinderSurface              // patch name
  // {
  //     type wall;
  //     faces
  //     (
  //         (16 19 23 20)
  //         (25 26 30 29)
  //         (35 32 36 39)
  //         (41 42 46 45)
  //     );
  // }         

  // walls             // patch name
  // {
  //     type wall;
  //     faces
  //     (
  //         (10 14 13 9)
  //         (17 18 22 21)
  //         (2 6 5 1)

  //         (8 9 13 12)
  //         (33 34 38 37)
  //         (1 5 4 0)

  //         (11 8 12 15)
  //         (27 24 28 31)
  //         (3 0 4 7)

  //         (10 11 15 14)
  //         (43 40 44 47)
  //         (2 3 7 6)

  //         (4 5 6 7)

  //         (9 8 11 10)
  //     );
  // }

  // walls
  // {
  //     type wall;
  //     faces
  //     (
  //         (3 0 4 7)
  //         (1 2 6 5)

  //         (0 1 5 4)
  //         (2 3 7 6)

  //         (4 5 6 7)
  //         (0 3 2 1)
  //     );
  // } 
     
  // cylinderSurface
  // {
  //     type wall;
  //     faces
  //     (
  //         (11 8 12 15)
  //         (9 10 14 13)

  //         (8 9 13 12)
  //         (10 11 15 14)

  //         (12 13 14 15)
  //         (8 11 10 9)
  //     );
  // }    

);

mergePatchPairs
(
);

// *************************************************** //